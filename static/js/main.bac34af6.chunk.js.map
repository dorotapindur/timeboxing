{"version":3,"sources":["components/TimeboxCreator.js","components/Timebox.js","components/ErrorBoundary.js","components/TimeboxList.js","components/TimeboxEditor.js","components/Clock.js","components/ProgressBar.js","components/CurrentTimebox.js","lib/time.js","components/EditableTimebox.js","components/App.js","index.js"],"names":["uuidv4","TimeboxCreator","props","handleSubmit","event","preventDefault","onSave","id","timeboxEdited","title","titleInput","current","value","totalTimeInMinutes","totalTimeInMinutesInput","React","createRef","this","isEditable","onSubmit","className","ref","type","placeholder","required","min","step","disabled","Component","Timebox","onDelete","onEdit","Error","onClick","ErrorBoundary","state","hasError","error","errorInfo","console","log","message","children","TimeboxList","timeboxes","addTimebox","timebox","setState","prevState","removeTimebox","indexToRemove","filter","index","updateTimebox","indexToUpdate","updatedTimebox","map","handleEdit","selectedTimebox","handleSave","modifiedTimebox","timeboxIndex","findIndex","TimeboxEditor","onTitleChange","onTotalTimeInMinutesChange","onConfirm","isRunning","onStart","inactive","timeboxEditorClassName","classNames","onChange","Clock","hours","minutes","seconds","over","hoursFormatted","toString","padStart","minutesFormatted","secondsFormatted","clockClassName","ProgressBar","percent","trackRemaining","progressBarClassName","style","paddingLeft","paddingRight","CurrentTimebox","durationInSeconds","isPaused","pausesCount","elapsedTimeInSeconds","onStop","onPause","totalTime","Math","floor","hoursLeft","minutesLeft","secondsLeft","progressInPercent","almostOver","currentTimeboxClassName","EditableTimebox","handleTitleChange","target","handleTotalTimeInMinutesChange","handleConfirm","startTimer","pauseTimer","handleStart","intervalId","handleStop","stopTimer","togglePause","count","window","setInterval","clearInterval","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bac34af6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/scss-components/TimeboxCreator.scss\";\n\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n\n\nclass TimeboxCreator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.titleInput = React.createRef();\n        this.totalTimeInMinutesInput = React.createRef();\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSave({\n            id: (this.props.timeboxEdited) ? this.props.timeboxEdited.id : uuidv4(),\n            title: this.titleInput.current.value,\n            totalTimeInMinutes: this.totalTimeInMinutesInput.current.value,\n        });\n        this.titleInput.current.value = \"\";\n        this.totalTimeInMinutesInput.current.value = \"\";\n    }\n\n    render() {\n        const {isEditable, timeboxEdited} = this.props;\n        if (timeboxEdited) {\n            if (this.titleInput.current) {\n                this.titleInput.current.value = timeboxEdited.title;\n            }\n            if (this.totalTimeInMinutesInput.current) {\n                this.totalTimeInMinutesInput.current.value = timeboxEdited.totalTimeInMinutes;\n            }\n        }\n        return (\n            <form onSubmit={this.handleSubmit} className={\"TimeboxCreator\"}>\n                <label>Co robisz?\n                    <input\n                        ref={this.titleInput}\n                        type=\"text\"\n                        placeholder=\"opis\"\n                        required />\n                </label><br />\n                <label>Ile minut?\n                    <input \n                        ref={this.totalTimeInMinutesInput}\n                        type=\"number\"\n                        min=\"0.1\"\n                        step=\"0.1\"\n                        required />\n                </label><br />\n                <button disabled={isEditable}\n                >Dodaj timebox\n                </button>\n                <button disabled={!isEditable}\n                >Zapisz zmiany\n                </button>\n            </form>\n        )\n    }\n};\n\nexport default TimeboxCreator;","import React from \"react\";\nimport \"../styles/scss-components/Timebox.scss\";\n\nfunction Timebox({ title, totalTimeInMinutes, onDelete, onEdit }) {\n    if (totalTimeInMinutes <= 0) {\n        throw new Error(\"Całkowity czas musi być większy niż zero\");\n    }\n    return (\n        <div className=\"Timebox\">\n            <h3>{title} - {totalTimeInMinutes} min.</h3>\n            <button onClick={onDelete}> Usuń </button>\n            <button onClick={onEdit}> Zmień </button>\n        </div>\n    )\n}\n export default Timebox;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ErrorBoundary extends React.Component {\n    state = {\n        hasError: false,\n    }\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n    componentDidCatch(error, errorInfo) {\n        // You can also log the error to an error reporting service\n        console.log(\"Wystąpił następujący błąd:\", error, errorInfo);\n    }\n    render() {\n        const { message, children } = this.props;\n        return this.state.hasError ? message : children;\n    }\n}\nErrorBoundary.propTypes = {\n    message: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired, //whatever that is not null or undefined\n};\nexport default ErrorBoundary;","import React from \"react\";\nimport TimeboxCreator from \"./TimeboxCreator\";\nimport Timebox from \"./Timebox\";\nimport Error from \"./ErrorBoundary\";\n\nclass TimeboxList extends React.Component {\n    state = {\n        timeboxes: [\n            { id: \"a\", title: \"Uczę się list\", totalTimeInMinutes: 25},\n            { id: \"b\", title: \"Uczę się formularzy\", totalTimeInMinutes: 15},\n            { id: \"c\", title: \"Uczę się komponentów niekontrolowanych\", totalTimeInMinutes: 5},\n        ],\n        isEditable: false,\n        timeboxEdited: null,/*none in that moment*/\n        hasError: false,\n    }\n    addTimebox = (timebox) => {\n        this.setState(prevState => {\n            const timeboxes = [timebox, ...prevState.timeboxes];\n            return { timeboxes };\n        })\n    }\n    removeTimebox = (indexToRemove) => {\n        this.setState(prevState => {\n            const timeboxes = prevState.timeboxes.filter((timeboxes, index) => index !== indexToRemove);\n            return { timeboxes };\n        })\n    }\n    updateTimebox = (indexToUpdate, updatedTimebox) => {\n        this.setState(prevState => {\n            const timeboxes = prevState.timeboxes.map((timebox, index) => index === indexToUpdate ? updatedTimebox : timebox)\n            return { timeboxes };\n        })\n    }\n\n    handleEdit = (selectedTimebox) => {\n        try {\n            this.setState({ isEditable: true, timeboxEdited: selectedTimebox});\n        } catch (error) {\n            console.log(\"Jest błąd przy edycji timeboxa\", error);\n        }\n        \n    }\n    handleSave = (modifiedTimebox) => {\n        const timeboxIndex = this.state.timeboxes.findIndex(timebox => timebox.id === modifiedTimebox.id);\n        this.setState({ isEditable: false, timeboxEdited: null });\n        if (timeboxIndex !== -1) {\n            this.updateTimebox(timeboxIndex, modifiedTimebox);\n            return;\n        }\n        this.addTimebox(modifiedTimebox);\n    }\n\n    render() {\n        const { isEditable, timeboxEdited } = this.state;\n        return (\n            <>\n                <TimeboxCreator\n                    onSave={this.handleSave}\n                    isEditable={isEditable}\n                    timeboxEdited={timeboxEdited} />\n                <Error message=\"Coś się wykrzaczyło w liście\">\n                {   \n                    this.state.timeboxes.map((timebox, index) => (\n                    <Timebox\n                        key={timebox.id}\n                        title={timebox.title}\n                        totalTimeInMinutes={timebox.totalTimeInMinutes}\n                        onDelete={() => this.removeTimebox(index)}\n                        onEdit={() => this.handleEdit(timebox)} />\n                    ))\n                }\n                </Error>               \n            </>\n        )\n    }\n\n}\n\nexport default TimeboxList;","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"../styles/scss-components/TimeboxEditor.scss\";\n\nfunction TimeboxEditor(props) {\n    const { \n        title, \n        totalTimeInMinutes,\n        onTitleChange,\n        onTotalTimeInMinutesChange,\n        onConfirm,\n        isEditable,\n        isRunning,\n        onStart\n    } = props;\n    let inactive = true;\n    if (isRunning === true) {\n        if (isEditable === true) {inactive = false}\n        else {inactive = true}\n    }\n    else {inactive = false}\n    let timeboxEditorClassName = classNames(\n        \"TimeboxEditor\",\n        {\n            \"inactive\": inactive,\n        }\n    )\n    return (\n        <div className={timeboxEditorClassName}>\n            <label>Co robisz? <input\n                disabled={inactive}\n                value={title}\n                onChange={onTitleChange}\n                type=\"text\" />\n            </label><br />\n            <label>Ile minut? <input \n                disabled={inactive}\n                value={totalTimeInMinutes}\n                onChange={onTotalTimeInMinutesChange}\n                type=\"number\" />\n            </label><br />\n            <button\n                onClick={onStart}\n                disabled={isRunning}>Zacznij\n            </button>\n            <button \n                onClick={onConfirm}\n                disabled={!isEditable}>Zatwierdź zmiany\n            </button>\n            <p className={`orangered ${!isRunning ? \"inactive\" : \"\"}` }>running</p>\n        </div>\n    )\n};\n\nexport default TimeboxEditor;","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"../styles/scss-components/Clock.scss\";\nimport PropTypes from \"prop-types\";\n\nfunction Clock({ hours, minutes, seconds, over}) {\n    if (hours < 0) {hours = 0}\n    if (hours > 23) {hours = 23}\n    if (minutes < 0) {minutes = 0}\n    if (minutes > 59) {minutes = 59}\n    if (seconds < 0) {seconds = 0}\n    if (seconds > 59) {seconds = 59}\n    let hoursFormatted = hours.toString().padStart(2, '0');\n    let minutesFormatted = minutes.toString().padStart(2, '0');\n    let secondsFormatted = seconds.toString().padStart(2, '0');\n    let clockClassName = classNames(\n        \"Clock\",\n        {\n            \"timeisup\": over,\n        }\n        );\n    return (\n        <div>\n            <p className={clockClassName}>Pozostało <span className=\"Clock__hours\">{hoursFormatted}</span><span className=\"Clock__colon\">:</span><span className=\"Clock__minutes\">{minutesFormatted}</span><span className=\"Clock__colon\">:</span><span className=\"Clock__seconds\">{secondsFormatted}</span></p>\n        </div>\n        )\n};\nfunction NonNegativeNumberType(props, propName, componentName) {\n    if(props[propName] < 0) {\n        return new Error(`Invalid prop ${propName}, issued to component ${componentName}. It has to greater or equal to 0).`)\n    }\n}\nconst NumbeOrStringType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nClock.propTypes = {\n    hours: NumbeOrStringType.isRequired,\n    minutes: NumbeOrStringType.isRequired,\n    seconds: NonNegativeNumberType\n};\nexport default Clock;","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"../styles/scss-components/ProgressBar.scss\";\n\nfunction ProgressBar({ percent, over, trackRemaining = false, }) {\n    if (percent > 100) {percent=100};\n    if (percent < 0) {percent=0};\n    let progressBarClassName = classNames(\n        \"ProgressBar\",\n        {\n            \"timeisup\": over,\n        }\n        );\n    if (trackRemaining)  \n        return (<div className={progressBarClassName} style={{ paddingLeft: `${percent}%` }}></div>)\n        else return (<div className={progressBarClassName} style={{ paddingRight: `${100 - percent}%` }}></div>);\n};\n\nexport default ProgressBar;","import React from \"react\";\nimport Clock from \"./Clock\";\nimport ProgressBar from \"./ProgressBar\";\nimport classNames from \"classnames\";\nimport \"../styles/scss-components/CurrentTimebox.scss\";\nimport { getHoursMinutesAndSecondsLeftFromDurationInSeconds } from \"../lib/time\";\n\nfunction CurrentTimebox (props) {\n    const {\n        title,\n        isEditable,\n        isRunning,\n        isPaused,\n        pausesCount,\n        elapsedTimeInSeconds,\n        onStop,\n        onEdit,\n        onPause,\n        totalTime,\n    } = props\n                    \n    const timeLeftInSeconds = totalTime - elapsedTimeInSeconds;\n    const [hoursLeft, minutesLeft, secondsLeft] = getHoursMinutesAndSecondsLeftFromDurationInSeconds(timeLeftInSeconds);\n    const progressInPercent = (elapsedTimeInSeconds/totalTime) * 100;\n    let inactive = true;\n    if (isRunning) { \n        isEditable ? inactive = true : inactive = false\n    } else { inactive = true }\n    let almostOver = false;\n    if (progressInPercent > 50) {almostOver = true};\n    let currentTimeboxClassName = classNames(\n        \"CurrentTimebox\",\n        {\n            \"inactive\": inactive,\n        }\n    )\n    return (\n        <div className={currentTimeboxClassName}>\n            <h2>{title}</h2>\n            <Clock \n                hours={hoursLeft}\n                minutes={minutesLeft}\n                seconds={secondsLeft}\n                over={almostOver}/>\n            <ProgressBar \n                percent={progressInPercent} \n                over={almostOver} />\n            <button\n                onClick={onEdit}\n                disabled={inactive}>Edytuj</button>\n            <button\n                onClick={onStop}\n                disabled={inactive}>Stop/Reset</button>\n            <button\n                onClick={onPause}\n                disabled={inactive}>{isPaused ? \"Wznów\" : \"Pauzuj\"}</button>\n            <p>Liczba przerw: {pausesCount}</p>\n        </div>\n    )\n    \n};\n\nexport default CurrentTimebox;","function getHoursMinutesAndSecondsLeftFromDurationInSeconds(durationInSeconds) {\n    const hours = Math.floor(durationInSeconds/3600);\n    const minutes = Math.floor(durationInSeconds/60);\n    const seconds = Math.floor(durationInSeconds%60);\n    return [hours, minutes, seconds];\n}\n\nexport {\n    getHoursMinutesAndSecondsLeftFromDurationInSeconds\n}","import React from \"react\";\nimport TimeboxEditor from \"./TimeboxEditor\";\nimport CurrentTimebox from \"./CurrentTimebox\";\n\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n\nclass EditableTimebox extends React.Component {\n    state = {\n        title: \"Uczę się wyciągać stan w górę!\",\n        totalTimeInMinutes: 3,\n        isEditable: false,\n        isRunning: false,\n        isPaused: false,\n        pausesCount: 0,\n        elapsedTimeInSeconds: 0,\n    }\n    componentDidMount() {\n        console.count(\"componentDidMount\");\n    }\n    componentWillUnmount() {\n        console.count(\"componentWillUnmount\");\n    }        \n    handleTitleChange = (event) => {\n        this.setState({title: event.target.value})\n    }\n    handleTotalTimeInMinutesChange = (event) => {\n        this.setState({totalTimeInMinutes: event.target.value})\n    }\n    handleConfirm = () => {\n        this.setState({ isEditable: false });\n        if (!this.state.isPaused) {\n            this.startTimer();\n        }\n    }\n    handleEdit = () => {\n        this.setState({ isEditable: true });\n        this.pauseTimer();\n    }\n    handleStart = ()  => {\n        console.log(\"handle start\")\n        this.setState({ isRunning: true });\n        this.intervalId = null;\n        this.startTimer();\n    }\n    handleStop = () => {\n        console.log(\"handle stop\")       \n        this.stopTimer();\n    }\n    togglePause = () => {\n        this.setState(\n            function(prevState) {\n                const isPaused = !prevState.isPaused;\n                if (isPaused) {\n                    this.pauseTimer()\n                } else {\n                    this.startTimer()\n                }\n                return {\n                    isPaused,\n                    pausesCount: isPaused ? prevState.pausesCount + 1 : prevState.pausesCount\n                }\n            }\n        )\n    }\n    \n    startTimer() {\n        if (this.intervalId === null) {\n            this.intervalId = window.setInterval (\n                () => {\n                    this.setState(\n                        (prevState) => ({elapsedTimeInSeconds: prevState.elapsedTimeInSeconds + 0.01})\n                    )\n                    if (this.state.elapsedTimeInSeconds >= this.state.totalTimeInMinutes * 60) {\n                        this.stopTimer();\n                        this.setState({\n                            isRunning: false,\n                        });\n                    }\n                },\n                10\n            );\n        }\n    }\n    pauseTimer() {\n        window.clearInterval(this.intervalId);\n        this.intervalId = null;\n    }\n    stopTimer() {\n        window.clearInterval(this.intervalId);\n        this.setState({\n            isRunning: false,\n            isPaused: false,\n            isEditable: false,\n            pausesCount: 0,\n            elapsedTimeInSeconds: 0, \n        });\n    }\n\n    render() {\n        const { title, totalTimeInMinutes, isEditable, isRunning, isPaused, pausesCount, elapsedTimeInSeconds } = this.state;\n        const totalTime = totalTimeInMinutes * 60;\n        return (\n            <>\n                <TimeboxEditor\n                    title={title}\n                    totalTimeInMinutes={totalTimeInMinutes}\n                    totalTime={totalTime}\n                    onTitleChange={this.handleTitleChange}\n                    onTotalTimeInMinutesChange={this.handleTotalTimeInMinutesChange}\n                    isEditable={isEditable}\n                    isRunning={isRunning}\n                    isPaused={isPaused}\n                    onStart={this.handleStart}\n                    onConfirm={this.handleConfirm}\n                    onPause={this.togglePause} />\n                <CurrentTimebox \n                    title={title}\n                    totalTimeInMinutes={totalTimeInMinutes}\n                    totalTime={totalTimeInMinutes * 60}\n                    isEditable={isEditable}\n                    isRunning={isRunning}\n                    isPaused={isPaused}\n                    pausesCount={pausesCount}\n                    elapsedTimeInSeconds={elapsedTimeInSeconds}\n                    onStart={this.handleStart}\n                    onStop={this.handleStop}\n                    onEdit={this.handleEdit}\n                    onPause={this.togglePause} />\n            </>\n        )\n    }\n}\n\n\nexport default EditableTimebox;","import React from \"react\";\nimport TimeboxList from \"./TimeboxList\";\nimport EditableTimebox from \"./EditableTimebox\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport \"../styles/scss-components/App.scss\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <ErrorBoundary message = \"Coś nie działa w całej aplikacji\">\n                <TimeboxList />\n                <EditableTimebox />\n            </ErrorBoundary>\n        </div>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles/main.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}